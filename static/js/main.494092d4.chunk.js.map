{"version":3,"sources":["Layout/Header/logo.svg","Layout/Header/Header.tsx","Homepage/BrandPromise/BrandPromise.tsx","Homepage/Services/Services.tsx","Homepage/Homepage.tsx","About/About.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","makeStyles","theme","createStyles","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Header","classes","React","useState","modalStyle","open","setOpen","className","src","logo","alt","href","to","onClick","Modal","aria-labelledby","aria-describedby","onClose","style","id","BrandPromise","Services","Homepage","About","App","basename","process","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.494092d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e9c6c2bf.svg\";","import React from \"react\";\r\nimport \"./Header.scss\";\r\nimport logo from \"./logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      position: \"absolute\",\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3)\r\n    }\r\n  })\r\n);\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <header className=\"App-header\">\r\n      <div className=\"Logo-section\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          <span className=\"Title\">MBA</span>\r\n          <br />\r\n          <span className=\"Title-details\">Enterprise, LLC.</span>\r\n        </p>\r\n      </div>\r\n      <div className=\"Contact\">\r\n        <div className=\"Contact-section Phone\">\r\n\r\n        <h4>Phone : </h4>\r\n          <a href=\"tel:1-575-200-9824\"> (575)-200-9824</a>\r\n        </div>\r\n        <br></br>\r\n        <div className=\"Contact-section\">\r\n          <h4>Email : </h4>\r\n          <a  href=\"mailto:mba_enterprise@hotmail.com\"> mba_enterprise@hotmail.com</a> \r\n          \r\n        </div>\r\n          \r\n      </div>\r\n\r\n      <nav className=\"Navbar\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li>\r\n            <Link to={\"/\"} className=\"nav-link\">\r\n              {\" \"}\r\n              Home{\" \"}\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <p onClick={handleOpen} className=\"nav-link\">\r\n              Contact\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <Link to={\"/about\"} className=\"nav-link\">\r\n              About\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Contact Us</h2>\r\n          <p id=\"simple-modal-description\">\r\n            Please Enter in your contact information so we can contact you back.\r\n            <table>\r\n              <tr>\r\n                <td>Name :</td>\r\n                <td>\r\n                  <input></input>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Email Address :</td>\r\n                <td>\r\n                  <input></input>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Phone Number :</td>\r\n                <td>\r\n                  <input></input>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>Additional Info :</td>\r\n                <td>\r\n                  <textarea></textarea>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </p>\r\n        </div>\r\n      </Modal>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./BrandPromise.scss\";\r\n\r\nconst BrandPromise: React.FC = () => {\r\n  return (\r\n    <div className=\"Brand-promise\">\r\n      <table>\r\n        <tr>\r\n          <td>\r\n            <div className=\"Svg Water-truck\"></div>\r\n          </td>\r\n          <td>\r\n            <p>Dedicated crew</p>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div className=\"Svg Logistics\"></div>\r\n          </td>\r\n          <td>\r\n            <p>Coordinated Logistics</p>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div className=\"Svg Timely\"></div>\r\n          </td>\r\n          <td>\r\n            <p>On time delivery</p>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div className=\"Svg Transportation\"></div>\r\n          </td>\r\n          <td>\r\n            <p>Transportation across the permian basin</p>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrandPromise;\r\n","import React from \"react\";\r\nimport \"./Services.scss\";\r\n\r\nconst Services: React.FC = () => {\r\n  return (\r\n    <div className=\"Services\">\r\n      <div className=\"Title\">\r\n        <span className=\"Title-span\">Services</span>\r\n        <div className=\"Services-grid\">\r\n          <div>Fresh, Brine  and production water hauling </div>\r\n          <div>KCL transportation </div>\r\n          <div>OBM - oil base mud - transportation</div>\r\n          <div>Power Washing for oil field equipment</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import React from \"react\";\r\nimport \"./Homepage.scss\";\r\nimport BrandPromise from \"./BrandPromise/BrandPromise\";\r\nimport Services from \"./Services/Services\";\r\n\r\nconst Homepage: React.FC = () => {\r\n  return (\r\n    <div className=\"Homepage\">\r\n      <div className=\"Section1\">\r\n        <div className=\"Blur\"></div>\r\n        <div className=\"Left-content\">\r\n          <BrandPromise />\r\n        </div>\r\n        <div className=\"Right-content\">\r\n\r\n          <p>\r\n            MBA Enterprise services the Oil and Gas industry by providing transportation for water and liquids accross the Permian Basin.           \r\n          </p>\r\n          <p>Additional services include Power washing for oil field equipment such as : well rigs, batteries, fracking tanks </p>\r\n          <p>\r\n            Our drivers are responsible, honest, and commited to providing the best service.             \r\n          </p>\r\n          <p>\r\n            Drivers are Drug tested, PCE Safeland Certified, CDL Certified and have tank endorsements\r\n          </p>\r\n          \r\n        </div>\r\n      </div>\r\n      <div className=\"Section2\">\r\n        <Services />\r\n      </div>\r\n      <div className=\"Section3\">Links</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\n\r\n\r\n\r\nconst About: React.FC = () => {\r\n  return (\r\n    <div className=\"About\">\r\n      About Us\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport Header from './Layout/Header/Header';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Homepage from './Homepage/Homepage';\r\nimport About from './About/About';\r\n\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n     <Router basename={process.env.PUBLIC_URL}>\r\n      <Header />\r\n      <Switch>\r\n          <Route exact path='/' component={Homepage} />\r\n          <Route exact path='/About' component={About} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}